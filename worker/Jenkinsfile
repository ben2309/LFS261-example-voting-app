pipeline {

  agent any

  stages {
    stage('build') {
      when{
            changeset "**/worker/**"
          }

        agent{
          docker{
            image 'maven:3.6.1-jdk-8-slim'
            args '-v $HOME/.m2:/root/.m2'
          }
        }

      steps {
        echo 'building worker app'
        dir('worker') {
          sh 'mvn compile'
        }
      }
    }
    stage('test') {
      when{
            changeset "**/worker/**"
          }

        agent{
          docker{
            image 'maven:3.6.1-jdk-8-slim'
            args '-v $HOME/.m2:/root/.m2'
          }
        }

      steps {
        echo 'running unit tests on worker app'
        dir('worker') {
          sh 'mvn clean test'
        }
      }
    }
    stage('package') {
      when{
            changeset "**/worker/**"
          }

        agent{
          docker{
            image 'maven:3.6.1-jdk-8-slim'
            args '-v $HOME/.m2:/root/.m2'
          }
        }

      steps {
        echo 'packaging worker app into a jar file'
        dir('worker') {
          sh 'mvn package -DskipTests'
          archiveArtifacts artifacts: '**/target/*.jar', fingerprint: true
        }
      }
    }
    stage('docker-package') {
      agent any
      when{
            changeset "**/worker/**"
          }

      steps {
        echo 'Packaging worker app with docker'
        script {
          docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {
            def workerImage = docker.build("semerbba/worker:v${env.BUILD_ID}", "./worker")
            workerImage.push() 
            workerImage.push("${env.BUILD_ID}")
            workerImage.push("latest")
          }
        }
      }
    }
  }
  post {
    always {
      echo 'the job is complete'
      slackSend(message:"end of pipe")
    }
  }
}
